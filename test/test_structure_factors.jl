@testitem "Structure factors" begin

    function simple_model_sf(; mode, seed=111)
        latsize = (4,4,4)
        J = 1.0
        cryst = Sunny.fcc_primitive_crystal()
        S = mode==:SUN ? 1/2 : 1
        κ = mode==:SUN ? 2 : 1
        sys = System(cryst, latsize, [SpinInfo(1; S)], mode; seed)
        sys.κs .= κ
        set_exchange!(sys, J, Bond(1, 1, [1, 0, 0]))
        return sys
    end

    function thermalize_simple_model!(sys; kT)
        Δt = 0.05  # Time step for thermalization
        λ  = 0.1
        nsteps = 1000  # Number of steps between MC samples
        langevin = Langevin(Δt; kT, λ)
        for _ in 1:nsteps
            step!(sys, langevin)
        end
    end
    

    # Test sum rule with custom observables 
    sys = simple_model_sf(; mode=:SUN)
    thermalize_simple_model!(sys; kT=0.1)
    S = Sunny.spin_matrices(2)
    observables = cat(S...; dims=3)
    sf = DynamicStructureFactor(sys; nω=100, ωmax=10.0, Δt=0.1, apply_g=false, observables)
    qgrid = all_exact_wave_vectors(sf)
    vals = intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_trace = sum(vals)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test sum rule with default observables in dipole mode 
    sys = simple_model_sf(; mode=:dipole)
    thermalize_simple_model!(sys; kT=0.1)
    sf = DynamicStructureFactor(sys; Δt=0.1, nω=100, ωmax=10.0, apply_g=false)
    add_sample!(sf, sys)
    vals = intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_trace = sum(vals)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test perp reduces intensity
    vals = intensities(sf, qgrid, :perp; negative_energies=true)
    total_intensity_unpolarized = sum(vals)
    @test total_intensity_unpolarized < total_intensity_trace


    # Test diagonal elements are approximately real (at one wave vector)
    for α in 1:3
        intensities_symmetric = intensities(sf, [(0.25, 0.5, 0)], (α,α))
        @test sum(imag(intensities_symmetric)) < 1e-15
    end


    # Test form factor correction works and is doing something. ddtodo: add example with sublattice
    formfactors = [FormFactor(1, "Fe2")]
    vals = intensities(sf, qgrid, :trace; formfactors, negative_energies=true)
    total_intensity_ff = sum(vals)
    @test total_intensity_ff != total_intensity_trace


    # Test path function and interpolation working (no correctness implied here)
    qs, _ = connected_path([(0, 0, 0), (0, 1, 0), (1, 1, 0)], 20)
    vals = intensities(sf, qs, :trace; interpolation=:linear)
    @test length(size(vals)) == 2 


    # Test static from dynamic intensities working
    static_vals = instant_intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_static = sum(static_vals)
    @test isapprox(total_intensity_static, total_intensity_trace; atol=1e-12)  # Order of summation can lead to very small discrepancies

    # Test InstantStructureFactor working
    sys = simple_model_sf(; mode=:dipole)
    thermalize_simple_model!(sys; kT=0.1)
    sf = InstantStructureFactor(sys; apply_g=false)
    true_static_vals = instant_intensities(sf, qgrid, :trace)
    true_static_total = sum(true_static_vals)
    @test isapprox(true_static_total / prod(sys.latsize), 1.0; atol=1e-12)

end


@testitem "Structure factor reference" begin

    function diamond_model(; J, dims = (3,3,3), kwargs...)
        crystal = Sunny.diamond_crystal()
        S = 3/2
        sys = System(crystal, dims, [SpinInfo(1; S)], :dipole; kwargs...)
        set_exchange!(sys, J, Bond(1, 3, [0,0,0]))
        randomize_spins!(sys)
        return sys
    end

    seed = 101
    J = Sunny.meV_per_K * 7.5413 
    sys = diamond_model(; J, seed)

    Δt_langevin = 0.07 
    kT = Sunny.meV_per_K * 2. # Units of meV
    λ  = 0.1
    langevin = Langevin(Δt_langevin; kT, λ)

    # Thermalize
    for _ in 1:4000
        step!(sys, langevin)
    end

    sf = DynamicStructureFactor(sys; nω=25, ωmax=5.5, Δt=2Δt_langevin)
    qs, _ = connected_path([(0.0, 0.0, 0.0), (0.5, 0.0, 0.0), (0.5, 0.5, 0.0), (0.0, 0.0, 0.0)], 10)
    data = intensities(sf, qs, :trace; interpolation=:linear, kT)

    refdata = [4.25495822366349 3.8523676192335286e-14 6.345236868981629e-16 3.832546332547814e-15 4.743459793596502e-15 -1.8462029256275113e-16 -4.426640746954192e-16 9.680819506472207e-16 -8.850440180857141e-16 -5.766512297644246e-15 2.2586552413180122e-15 3.726776495609921e-15 -7.4673790064119025e-16 3.865059721337427e-15 -2.8717139541402114e-15 1.6334889666891717e-15 7.37518826793863e-16 -7.836137531308429e-17 5.807960757836408e-16 7.882232456825468e-16 -1.7516072126138612e-15 4.355970568201551e-16 -2.3831077076814153e-15 -2.067357460144982e-15 -5.254821637826504e-15; 2.98621791935384 0.009323187234097684 0.007391289085361007 0.011120846761712225 0.005003798264821712 0.012301697110477742 0.020666399467120098 0.09787555894629947 1.2803399254195713 1.3265303862110889 0.053911984168211934 0.020224306634840022 0.015086215920449992 0.01403621640013961 0.009233292700436815 0.008069929292263155 0.010015991701269057 0.007777857171824852 0.0068553078043969325 0.01726001208115293 0.0061097379471628755 0.011155112369169837 0.004239892976879822 0.013201503488524743 0.007089436909389983; 1.71747761504419 0.018646374468156843 0.014782578170721379 0.022241693523420616 0.01000759652963868 0.024603394220955668 0.04133279893424063 0.19575111789259797 2.5606798508391435 2.6530607724221835 0.1078239683364216 0.04044861326967632 0.03017243184090073 0.028072432800275354 0.018466585400876503 0.016139858584524675 0.020031983402537375 0.015555714343649782 0.013710615608793284 0.03452002416230507 0.012219475894327503 0.022310224738339237 0.008479785953762026 0.026403006977051554 0.01417887381878522; 0.4487373107345406 0.027969561702216005 0.022173867256081746 0.033362540285129 0.015011394794455644 0.03690509133143359 0.061999198401361165 0.2936266768388964 3.8410197762587157 3.9795911586332777 0.16173595250463124 0.06067291990451261 0.04525864776135147 0.04210864920041109 0.027699878101316185 0.024209787876786196 0.030047975103805687 0.023333571515474712 0.020565923413189635 0.05178003624345721 0.01832921384149213 0.03346533710750863 0.012719678930644232 0.039604510465578356 0.02126831072818046; 0.021481315977290152 0.02526943968779746 0.02009324413106709 0.03157129670759446 0.017690927097276102 0.03652535884533566 0.06401419505975292 0.26672254915081195 3.4191582942494763 3.5396844603103395 0.1526726431310633 0.06510633279801453 0.06273816039592062 0.10308766642957076 3.4792882162205427 0.46044215034726793 0.055676902690224336 0.03149645733135177 0.04173664361007216 0.055336446583475724 0.01950657870034469 0.036636884907091306 0.016178234284265684 0.038533697254317524 0.028220612527400928; 0.014967475996239215 0.01655766304914007 0.013276664900864928 0.023324007960438466 0.019208326419098302 0.029804911560949814 0.056703490313780275 0.17742857814553611 2.146196108525833 2.216559219720387 0.11212168698660663 0.061644298820849305 0.08141432138754895 0.18753808407324235 8.65205407704916 1.1107557294068593 0.08911229821921812 0.03985185746925488 0.07006507000319778 0.05204105605292743 0.01821775701504122 0.03581665042188062 0.019246120826256766 0.030326725693162894 0.03510434677153401; 0.011673387977592138 0.018190982415181887 0.01677052297615466 0.01974524860189284 0.017458572355466315 0.026148648030011008 0.043640057128244474 0.1301906553163825 1.5084440454772918 1.564119332012594 0.12564603955159082 0.4286614368322204 0.12503980925374253 0.20848240952376468 7.263515405071706 3.4889930480845033 0.2739087816994253 0.1120696704913943 0.08290899589574664 0.06097464020261728 0.031908020172118266 0.04008837287791046 0.02261525550475124 0.03816861270354016 0.05026726957336794; 0.00837929995894506 0.019824301781223703 0.020264381051444395 0.016166489243347217 0.015708818291834327 0.022492384499072197 0.030576623942708665 0.08295273248722887 0.8706919824287506 0.9116794443048009 0.13917039211657503 0.7956785748435915 0.16866529711993614 0.22942673497428706 5.874976733094252 5.867230366762147 0.4587052651796325 0.18428748351353372 0.0957529217882955 0.06990822435230715 0.04559828332919531 0.044360095333940294 0.025984390183245713 0.04601049971391742 0.06543019237520187; 0.005085211940297984 0.02145762114726552 0.023758239126734127 0.012587729884801592 0.013959064228202341 0.01883612096813339 0.01751319075717287 0.03571480965807528 0.23293991938020964 0.259239556597008 0.1526947446815592 1.1626957128549624 0.21229078498612972 0.2503710604248094 4.486438061116799 8.245467685439792 0.6435017486598397 0.2565052965356731 0.10859684768084435 0.07884180850199701 0.05928854648627236 0.04863181778997013 0.029353524861740185 0.05385238672429469 0.08059311517703578; 0.00490886117984265 0.020730327572233056 0.02362063676067547 0.02444944965622218 0.021192291909807537 0.02346458100034231 0.016867924283399623 0.027618648207420826 0.021443370138709984 0.04370594162318084 0.13469458169646595 1.0453324308855896 0.21259357663694917 0.2625841834094041 3.510844050815797 8.761091667701338 3.3813064067436986 0.7422036373235029 0.17720996664179084 0.10560536435719063 0.09372889530873227 0.05892230970505537 0.041527003200193834 0.06969707299771996 0.09876539159222356; 0.006291379048483186 0.01882272752666346 0.02166730417394262 0.04403140899262586 0.032917010464031324 0.03223540281412509 0.022431741165507647 0.039093367446015936 0.023074577800730967 0.04662546301633656 0.10093216093633402 0.6857789389258455 0.1912350201800816 0.270431705161035 2.741722371353022 8.345408981754838 7.395615152129381 1.4346422419941773 0.27370768213693614 0.14128390606513613 0.13854428696388357 0.07222218634966829 0.058102653368627064 0.08954315890266923 0.11844234481408822; 0.004416781025696068 0.018901199761279852 0.019408467379791794 0.021456658506647557 0.017339748476662812 0.01899942846093928 0.01763528511796362 0.027298081485954993 0.01890290463779792 0.037671378320088614 0.15867369047752516 1.298310742022353 0.2279344009818386 0.19811817930600734 2.1413347005374925 5.375190165268561 2.699563456662964 0.5717795287301255 0.14618017092155425 0.08129375634126226 0.0805621372068212 0.043212348039037826 0.04288051471946805 0.052836198865865054 0.08415297611100284; 0.003260768386792468 0.02057328424263462 0.017079475629654586 0.00999279205867042 0.006312213448834154 0.008727575371740726 0.015155824641742172 0.020829067712472147 0.013445781450226487 0.03210341204368021 0.24147195960954537 2.1327136081450044 0.29204853741062925 0.07548213900757555 0.695411317417393 1.5080411891697276 0.3049170325955973 0.08928360274919828 0.046160714257745955 0.033615455412937124 0.030700657145204417 0.017118423595261476 0.0243042711789448 0.017846071348008592 0.05936399076528969; 0.09418933196058195 0.0230646583494421 0.016823649571222177 0.01197209687385368 0.007255225036585133 0.012726543707413562 0.0236994827532254 0.09282557098369004 0.9036922624669923 0.770959238664433 0.24082569799247536 1.8211141806599498 0.24526918723862318 0.02713219915709752 0.024734091463257418 0.02129805178264175 0.02014671905997521 0.014613801650412803 0.019153142027504726 0.02323228335183291 0.01688195154393627 0.013414813115185654 0.017077823288813875 0.014128743500589187 0.04341710365773458; 0.5535852622175965 0.02252876624935888 0.015838486284844473 0.014115685503464773 0.010086393028408136 0.018112891422181254 0.030122455359833968 0.15490075497317352 1.6834869460427475 1.415655817523999 0.18671719197907422 1.0422991032668405 0.15177878779712167 0.028288648281764323 0.021748534052132826 0.0209627626275323 0.020297466384984007 0.01488678294813969 0.017654551933917573 0.023832542692984335 0.01633621483992887 0.01640821743814467 0.015274329358718128 0.020161616426132754 0.03009531283340771; 1.4001787209204193 0.018506025824430544 0.012706156927514983 0.012834865567693494 0.009820911519585739 0.017787250042534862 0.02831353243649918 0.1601215544723865 1.792803130156834 1.5020614706997815 0.1285434069758616 0.479175047359146 0.07973712344351713 0.02415209813047098 0.016630999671214577 0.01730132427872246 0.01698992898332452 0.0125421431056465 0.01396283156480449 0.020160581914729452 0.0133406440146034 0.0151702166932668 0.011826860833883499 0.019817783484548733 0.01841853194900877; 2.6339697080690496 0.010996437074657094 0.007426661499233706 0.00812963706653985 0.0064587805101179434 0.011749619568474385 0.018272713983221053 0.108487969481329 1.2316408148092515 1.0301761981917803 0.06630434298283766 0.1317420129368673 0.029144194177809696 0.0147225487032175 0.009381488320502682 0.010313736736212246 0.010224106854996768 0.007579882122933248 0.008077980920165498 0.012216401017068276 0.007895239067959862 0.009700810880552059 0.006735417714309999 0.01309724467583713 0.00838676100453779; 4.25495822366349 3.8523676192335286e-14 6.345236868981629e-16 3.832546332547814e-15 4.743459793596502e-15 -1.8462029256275113e-16 -4.426640746954192e-16 9.680819506472207e-16 -8.850440180857141e-16 -5.766512297644246e-15 2.2586552413180122e-15 3.726776495609921e-15 -7.4673790064119025e-16 3.865059721337427e-15 -2.8717139541402114e-15 1.6334889666891717e-15 7.37518826793863e-16 -7.836137531308429e-17 5.807960757836408e-16 7.882232456825468e-16 -1.7516072126138612e-15 4.355970568201551e-16 -2.3831077076814153e-15 -2.067357460144982e-15 -5.254821637826504e-15]

    # Compare with reference 
    @test isapprox(data, refdata; atol=1e-12)
end
